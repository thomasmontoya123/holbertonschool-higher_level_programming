``7-base_geometry`` module
_____________________________

Documentation checker:

>>> len(__import__('7-base_geometry').__doc__) > 5
True
    >>> len(__import__('7-base_geometry').BaseGeometry.__doc__) > 5
    True


    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test cases:

    correct input
    >>> BaseGeometry().integer_validator("my_int", 12)

    correct input
    >>> BaseGeometry().integer_validator("width", 89)

    string as value
    >>> BaseGeometry().integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    0 as value
    >>> BaseGeometry().integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

    negative value
    >>> BaseGeometry().integer_validator("distance", -4)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

    missing one argument
    >>> BaseGeometry().integer_validator("distance")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'


    missing two arguments
    >>> BaseGeometry().integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    empty string value
    >>> BaseGeometry().integer_validator("", 4)


    subtype
    >>> BaseGeometry().integer_validator("width", True)
    Traceback (most recent call last):
    ...
    TypeError: width must be an integer